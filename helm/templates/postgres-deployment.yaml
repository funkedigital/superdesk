apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: {{ .Values.postgres.component }}
  template:
    metadata:
      labels:
        component: {{ .Values.postgres.component }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: instance/type
                operator: NotIn
                values:
                - lb
            - matchExpressions:
              - key: instance/type
                operator: NotIn
                values:
                - storage
            - matchExpressions:
              - key: instance/type
                operator: NotIn
                values:
                - database
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-persistent-volume-claim
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          resources:
            limits:
              cpu: "12"
              memory: 20Gi
            requests:
              cpu: "8"
              memory: 10Gi
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          env:
            - name: POSTGRES_DB
              value: "publications"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: TZ
              value: {{ .Values.timezone | quote }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "sleep 5 && rm -f /etc/localtime && ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime"]
