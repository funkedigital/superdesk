apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.supervisor.name }}
spec:
  replicas: 3
  selector:
    matchLabels:
      component: {{ .Values.supervisor.component }}
  template:
    metadata:
      labels:
        component: {{ .Values.supervisor.component }}
      annotations:
        backup.velero.io/backup-volumes: {{ .Values.publisher.volumeName }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: instance/type
                operator: NotIn
                values:
                - lb
            - matchExpressions:
              - key: instance/type
                operator: NotIn
                values:
                - storage
            - matchExpressions:
              - key: instance/type
                operator: NotIn
                values:
                - database
      volumes:
        - name: {{ .Values.publisher.volumeName }}
          persistentVolumeClaim:
            claimName: publisher-persistent-volume-claim
      containers:
        - name: supervisor
          image: "{{ .Values.supervisor.image }}:{{ .Values.supervisor.tag }}"
          resources:
            limits:
              cpu: "8"
              memory: 16Gi
            requests:
              cpu: "4"
              memory: 8Gi
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 5555
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/publisher/app/logs
              name: {{ .Values.publisher.volumeName }}
            - mountPath: /var/www/publisher/public/uploads
              name: {{ .Values.publisher.volumeName }}
          env:
            - name: APP_DEBUG
              value: {{ .Values.appDebug | quote }}
            - name: APP_ENV
              value: {{ .Values.appEnv }}
            - name: CACHE_SERVERS
              value: '["{{ .Values.superdesk.swpHost }}"]'
            # for prod environments set the secret token (from SD > Settings > Subscribers):
            # php bin/console swp:organization:update OrganizationName --secretToken secret_token
            - name: CORS_ALLOW_ORIGIN
              value: '["{{ .Values.proto }}://{{ .Values.superdesk.swpHost }}", "{{ .Values.proto }}://{{ .Values.publisher.superdeskHost }}"]'
            - name: DATABASE_URL
              value: pgsql://postgres:postgres@postgres/publications
            - name: ELASTICA_HOST
              value: elasticsearch
            - name: ELASTICA_INDEX_NAME
              value: swp_index-docker
            - name: ELASTICA_PORT
              value: "9200"
            - name: FS_MAIN_ADAPTER
              value: local_adapter
            - name: MESSENGER_TRANSPORT_DSN
              value: amqp://guest:guest@rabbitmq:5672/%2f/messages
            - name: RABBIT_MQ_HOST
              value: rabbitmq
            - name: RABBIT_MQ_PASSWORD
              value: guest
            - name: RABBIT_MQ_PORT
              value: "5672"
            - name: RABBIT_MQ_USER
              value: guest
            - name: RABBIT_MQ_VHOST
              value: /
            - name: TZ
              value: {{ .Values.timezone }}
            - name: WEBSOCKET_HOST
              value: 0.0.0.0
            - name: WEBSOCKET_PORT
              value: "8080"
      imagePullSecrets:
        - name: harbor-access
